{
	"Bubble sort": {
		"scope": "javascript,typescript",
		"prefix": "bubbleSort",
		"body": [
			"function bubbleSort(arr) {",
			"// loop through the array",
			"for (let i = 0; i < arr.length; i++) {",
			"\t// loop through the array again",
			"\tfor (let j = 0; j < arr.length; j++) {",
			"\t  // if the current value is greater than the next value",
			"\t  if (arr[j] > arr[j + 1]) {",
			"\t\t// swap the values",
			"\t\tlet temp = arr[j];",
			"\t\tarr[j] = arr[j + 1];",
			"\t\tarr[j + 1] = temp;",
			"\t  }",
			"\t}",
			"}",
			"return arr;",
			"}"
		],
		"description": "Bubble sort"
	},
	"Insertrion sort": {
		"scope": "javascript,typescript",
		"prefix": "insertionSort",
		"body": [
			"function insertionSort(arr) {",
			"\t// loop through the array starting at the second element",
			"\tfor (var i = 1; i < arr.length; i++) {",
			"\t\t// store the current value",
			"\t\tvar currentVal = arr[i];",
			"\t\t// loop through the array backwards",
			"\t\tfor (var j = i - 1; j >= 0 && arr[j] > currentVal; j--) {",
			"\t\t\t// move the value to the right",
			"\t\t\tarr[j + 1] = arr[j];",
			"\t\t}",
			"\t\t// insert the current value",
			"\t\tarr[j + 1] = currentVal;",
			"\t}",
			"\treturn arr;",
			"}"
		],
		"description": "Insertion sort"
	},
	"Quick sort": {
		"scope": "javascript,typescript",
		"prefix": "quickSort",
		"body": [
			"function quickSort(arr) {",
			"\t// if array is less that 1 length, then it is sorted and return",
			"\tif (arr.length <= 1) {",
			"\t\treturn arr;",
			"\t}",
			"\t// get the pivot",
			"\tlet pivot = arr[0];",
			"\t// create two arrays, one for left and one for right",
			"\tlet left = [];",
			"\tlet right = [];",
			"\t// loop through the array and compare each element to the pivot",
			"\tfor (let i = 1; i < arr.length; i++) {",
			"\t\tif (arr[i] < pivot) {",
			"\t\t\tleft.push(arr[i]);",
			"\t\t} else {",
			"\t\t\tright.push(arr[i]);",
			"\t\t}",
			"\t}",
			"\t// recursively call the function on the left and right arrays",
			"\treturn quickSort(left).concat(pivot, quickSort(right));",
			"}"
		],
		"description": "Quick sort"
	},
	"Selection sort": {
		"scope": "javascript,typescript",
		"prefix": "selectionSort",
		"body": [
			"function selectionSort(arr) {",
			"\t//loop through the array",
			"\tfor (let i = 0; i < arr.length; i++) {",
			"\t\t//set the minimum to the current index",
			"\t\tlet min = i;",
			"\t\t//loop through the rest of the array and find the minimum value",
			"\t\tfor (let j = i + 1; j < arr.length; j++) {",
			"\t\t\tif (arr[j] < arr[min]) {",
			"\t\t\t\tmin = j;",
			"\t\t\t}",
			"\t\t}",
			"\t\t//swap the minimum value with the current index",
			"\t\tif (min != i) {",
			"\t\t\tlet temp = arr[i];",
			"\t\t\tarr[i] = arr[min];",
			"\t\t\tarr[min] = temp;",
			"\t\t}",
			"\t}",
			"}"
		],
		"description": "Selection sort"
	}
}